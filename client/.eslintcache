[{"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\App.js":"1","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\index.js":"3","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\store.js":"7","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\index.js":"8","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\alert.js":"9","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\types.js":"10","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\alert.js":"11","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\auth.js":"12","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\utils\\setAuthToken.js":"13","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\auth.js":"14","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\AlertDiv.js":"15","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\profile.js":"16","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\profile.js":"17","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\ProfileItem.js":"18","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\Profiles.js":"19","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\routing\\PrivateRoute.js":"20","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\layout\\Tabs.js":"22","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\Search.js":"23","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\FollowType.js":"24","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\category.js":"25","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\category.js":"26","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\friends-list\\CreateFriendsList.js":"27","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\friends-list\\FriendsListModel.js":"28","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\layout\\FriendsModal.js":"29","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\Dashboard.js":"30","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\PollSection.js":"31","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\FriendsListSection.js":"32","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\FriendsSection.js":"33","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\FriendsListsSectionItem.js":"34","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\poll.js":"35","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\poll.js":"36","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\PollsItem.js":"37","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\CreatePollModel.js":"38","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\FriendsPolls.js":"39","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\FriendsPollsItem.js":"40","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\EditPollModel.js":"41","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\PollDetails.js":"42","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\UserVoteItem.js":"43","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\UpdatePeofileModal.js":"44","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\PublicProfile.js":"45"},{"size":3211,"mtime":1617389243433,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":1609447891820,"results":"48","hashOfConfig":"47"},{"size":478,"mtime":1613098135261,"results":"49","hashOfConfig":"47"},{"size":6794,"mtime":1617593963735,"results":"50","hashOfConfig":"47"},{"size":3176,"mtime":1616987491173,"results":"51","hashOfConfig":"47"},{"size":2485,"mtime":1616987756640,"results":"52","hashOfConfig":"47"},{"size":948,"mtime":1613902572109,"results":"53","hashOfConfig":"47"},{"size":292,"mtime":1614348093024,"results":"54","hashOfConfig":"47"},{"size":389,"mtime":1612593310002,"results":"55","hashOfConfig":"47"},{"size":1567,"mtime":1615931270490,"results":"56","hashOfConfig":"47"},{"size":334,"mtime":1612593309939,"results":"57","hashOfConfig":"47"},{"size":2469,"mtime":1615707314981,"results":"58","hashOfConfig":"47"},{"size":253,"mtime":1612593310021,"results":"59","hashOfConfig":"47"},{"size":1182,"mtime":1615706671143,"results":"60","hashOfConfig":"47"},{"size":450,"mtime":1612593309944,"results":"61","hashOfConfig":"47"},{"size":4914,"mtime":1615969782871,"results":"62","hashOfConfig":"47"},{"size":1412,"mtime":1615931248305,"results":"63","hashOfConfig":"47"},{"size":1344,"mtime":1617594847775,"results":"64","hashOfConfig":"47"},{"size":1108,"mtime":1616140867100,"results":"65","hashOfConfig":"47"},{"size":689,"mtime":1616912604306,"results":"66","hashOfConfig":"47"},{"size":243,"mtime":1613103127905,"results":"67","hashOfConfig":"47"},{"size":3102,"mtime":1613103127905,"results":"68","hashOfConfig":"47"},{"size":1231,"mtime":1616140896472,"results":"69","hashOfConfig":"47"},{"size":1148,"mtime":1614223067443,"results":"70","hashOfConfig":"47"},{"size":1205,"mtime":1614551885303,"results":"71","hashOfConfig":"47"},{"size":4603,"mtime":1615469345343,"results":"72","hashOfConfig":"47"},{"size":3279,"mtime":1614089990573,"results":"73","hashOfConfig":"47"},{"size":826,"mtime":1613372009698,"results":"74","hashOfConfig":"47"},{"size":783,"mtime":1613374279789,"results":"75","hashOfConfig":"47"},{"size":1292,"mtime":1616988253772,"results":"76","hashOfConfig":"47"},{"size":2551,"mtime":1615604245205,"results":"77","hashOfConfig":"47"},{"size":3214,"mtime":1616231556758,"results":"78","hashOfConfig":"47"},{"size":3966,"mtime":1616985807767,"results":"79","hashOfConfig":"47"},{"size":3290,"mtime":1616056454878,"results":"80","hashOfConfig":"47"},{"size":1542,"mtime":1615519114769,"results":"81","hashOfConfig":"47"},{"size":5189,"mtime":1615522610560,"results":"82","hashOfConfig":"47"},{"size":3912,"mtime":1616228857974,"results":"83","hashOfConfig":"47"},{"size":5184,"mtime":1617227513891,"results":"84","hashOfConfig":"47"},{"size":1898,"mtime":1617397570440,"results":"85","hashOfConfig":"47"},{"size":3510,"mtime":1617592881916,"results":"86","hashOfConfig":"47"},{"size":3436,"mtime":1616228773177,"results":"87","hashOfConfig":"47"},{"size":3667,"mtime":1615786307908,"results":"88","hashOfConfig":"47"},{"size":1742,"mtime":1615972368769,"results":"89","hashOfConfig":"47"},{"size":2383,"mtime":1616552311345,"results":"90","hashOfConfig":"47"},{"size":1298,"mtime":1616552299172,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},"cd9fmk",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"95"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"95"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"154"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"95"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"147"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"95"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"135"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\App.js",["210","211"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport AlertDiv from './components/AlertDiv';\r\nimport './scss/styles.scss';\r\nimport Navbar from './components/layout/Navbar';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport FriendsPolls from './components/polls/FriendsPolls';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\n\r\n//Redux imports\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './store';\r\nimport { loadUser } from './actions/auth';\r\nimport Profiles from './components/profile/Profiles';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport PollDetails from './components/polls/PollDetails';\r\nimport PublicProfile from './components/profile/PublicProfile';\r\nimport io from 'socket.io-client';\r\nimport Spinner from './components/layout/Spinner';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  const [socket, setSocket] = React.useState(null);\r\n\r\n  const setupSocket = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token && !socket) {\r\n      const newSocket = io('http://localhost:5000', {\r\n        query: {\r\n          token: localStorage.getItem('token'),\r\n        },\r\n      });\r\n      newSocket.emit('connection');\r\n\r\n      newSocket.on('disconnect', () => {\r\n        setSocket(null);\r\n        setTimeout(setupSocket, 1000);\r\n      });\r\n\r\n      newSocket.on('connect', () => {\r\n        console.log('connected');\r\n      });\r\n\r\n      setSocket(newSocket);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setupSocket();\r\n    console.log(socket);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <Router>\r\n          <Fragment>\r\n            <Navbar socket={socket}></Navbar>\r\n            <AlertDiv />\r\n            <Route exact path='/' component={Register} />\r\n            <Switch>\r\n              <Route\r\n                path='/login'\r\n                render={() => <Login setupSocket={setupSocket} />}\r\n                exact\r\n              />\r\n              <PrivateRoute exact path='/friends' component={Profiles} />\r\n              <PrivateRoute\r\n                exact\r\n                path='/dashboard'\r\n                socket={socket}\r\n                component={Dashboard}\r\n              />\r\n              <PrivateRoute\r\n                path='/poll-details'\r\n                exact\r\n                component={PollDetails}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path='/friends-polls'\r\n                socket={socket}\r\n                component={FriendsPolls}\r\n              />\r\n              <PrivateRoute path='/profile' exact component={PublicProfile} />\r\n            </Switch>\r\n          </Fragment>\r\n        </Router>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n",["212","213"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reportWebVitals.js",[],["214","215"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\index.js",[],["216","217"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\layout\\Navbar.js",["218"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\store.js",[],["219","220"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\index.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\alert.js",["221"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\types.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\alert.js",[],["222","223"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\auth.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\auth.js",["224"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  GET_USER,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n  otherUser: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        otherUser: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\AlertDiv.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\profile.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\profile.js",["225","226"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  UPDATE_PROFILE_PIC,\r\n  GET_PROFILES,\r\n  GET_FOLLOWING_FOLLOWERS,\r\n  FOLLOW,\r\n  UNFOLLOW,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  folowingFollowers: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case GET_FOLLOWING_FOLLOWERS:\r\n      return {\r\n        ...state,\r\n        folowingFollowers: payload,\r\n        loading: false,\r\n      };\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        profile: null,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",["227","228"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\ProfileItem.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\Profiles.js",["229","230","231"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles, getCurrentProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport Search from './Search';\r\n\r\nconst Profiles = ({\r\n  getProfiles,\r\n  getCurrentProfile,\r\n  profile: { profiles, loading, profile },\r\n}) => {\r\n  const [allProfile, setAllProfile] = useState([]);\r\n  useEffect(() => {\r\n    getProfiles();\r\n    getCurrentProfile();\r\n    if (profiles !== [] && profile !== null) {\r\n      setAllProfile(\r\n        profiles.filter(\r\n          (userProfile) => userProfile.user._id !== profile.user._id\r\n        )\r\n      );\r\n    }\r\n  }, [getProfiles, getCurrentProfile]);\r\n\r\n  return loading || profiles === [] || profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Search allProfile={allProfile} profile={profile} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles, getCurrentProfile })(\r\n  Profiles\r\n);\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\layout\\Tabs.js",[],["232","233"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\Search.js",["234","235"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Search = ({ allProfile, profile }) => {\r\n  const [data, setData] = useState([]);\r\n  const [result, setResult] = useState('');\r\n\r\n  useEffect(() => {\r\n    const results = allProfile.filter((userProfile) => {\r\n      return userProfile.user.name.toLowerCase().includes(result);\r\n    });\r\n\r\n    setData(results);\r\n  }, [result]);\r\n  //console.log(data)\r\n\r\n  const onChange = (e) => {\r\n    setResult(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type='text'\r\n        placeholder='search here ..'\r\n        value={result}\r\n        onChange={onChange}\r\n      />\r\n      <div className='profiles'>\r\n        {data.length > 0 && profile !== null ? (\r\n          data.map(\r\n            (userProfile) =>\r\n              userProfile.user !== null && (\r\n                <ProfileItem\r\n                  key={userProfile._id}\r\n                  profile={userProfile}\r\n                  loginUser={profile}\r\n                />\r\n              )\r\n          )\r\n        ) : (\r\n          <div>No profiles found</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\FollowType.js",["236","237"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles, getCurrentProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport Search from './Search';\r\n\r\nconst FollowType = ({\r\n  getProfiles,\r\n  getCurrentProfile,\r\n  profile: { profiles, loading, profile },\r\n  followType,\r\n}) => {\r\n  const [allProfile, setAllProfile] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProfiles();\r\n    getCurrentProfile();\r\n    if (profiles !== [] && profile !== null) {\r\n      setAllProfile(\r\n        profiles.filter(\r\n          (userProfile) =>\r\n            profile[followType].includes(userProfile.user._id) &&\r\n            userProfile.user._id !== profile.user._id\r\n        )\r\n      );\r\n    }\r\n  }, [getProfiles]);\r\n\r\n  return loading || profiles === [] || profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Search allProfile={allProfile} profile={profile} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles, getCurrentProfile })(\r\n  FollowType\r\n);\r\n",["238","239"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\category.js",["240"],"import {\r\n  GET_CATEGORY,\r\n  GET_CATEGORIES,\r\n  CATEGORY_ERROR,\r\n  CLEAR_CATEGORY,\r\n  UPDATE_CATEGORY,\r\n  CREATE_CATEGORY,\r\n  DELETE_CATEGORY,\r\n  REMOVE_FRIEND,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  category: null,\r\n  categories: null,\r\n  deletedCategory: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_CATEGORY:\r\n    case GET_CATEGORY:\r\n    case UPDATE_CATEGORY:\r\n    case REMOVE_FRIEND:\r\n      return {\r\n        ...state,\r\n        category: payload,\r\n        loading: false,\r\n      };\r\n    case GET_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: payload,\r\n        loading: false,\r\n      };\r\n    case DELETE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        deletedCategory: payload,\r\n        loading: false,\r\n      };\r\n    case CATEGORY_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        category: null,\r\n        loading: false,\r\n      };\r\n    case CLEAR_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: null,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",["241","242"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\category.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\friends-list\\CreateFriendsList.js",["243"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles, getCurrentProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport { createCategory } from '../../actions/category';\r\n\r\nconst CreateFriendsList = ({\r\n  getProfiles,\r\n  getCurrentProfile,\r\n  createCategory,\r\n  profile: { profiles, loading, profile },\r\n  onClose,\r\n  dispatch,\r\n}) => {\r\n  const [name, setName] = useState('');\r\n  const [allProfile, setAllProfile] = useState([]);\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProfiles();\r\n    getCurrentProfile();\r\n    if (profiles !== [] && profile !== null) {\r\n      setAllProfile(\r\n        profiles.filter(\r\n          (userProfile) =>\r\n            profile.followers.includes(userProfile.user._id) &&\r\n            userProfile.user._id !== profile.user._id\r\n        )\r\n      );\r\n      console.log(allProfile);\r\n    }\r\n  }, [getProfiles]);\r\n\r\n  const addUser = (userId) => {\r\n    setUserList([...userList, userId]);\r\n  };\r\n\r\n  const handleOnClick = (name, friends) => {\r\n    if (friends.length) {\r\n      createCategory(name, friends);\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  return loading || profiles === [] || profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <>\r\n      <div className='create-friends-list-container'>\r\n        <h1 className='create-friends-list-container__heading'>\r\n          Create a friend list\r\n        </h1>\r\n        <div>\r\n          {' '}\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            placeholder='Enter name of the list'\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='feiends-list'>\r\n          {allProfile.length > 0 && profile !== null ? (\r\n            allProfile.map(\r\n              (userProfile) =>\r\n                userProfile.user !== null && (\r\n                  <div className='friends-list-item'>\r\n                    <div className='avatar-name-section'>\r\n                      {userProfile.user.name}\r\n                    </div>\r\n                    <div>\r\n                      {userList.length !== 0 &&\r\n                      userList.includes(userProfile.user._id) ? (\r\n                        <button className='round-button add-remove-button'>\r\n                          Added\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className='round-button add-remove-button'\r\n                          onClick={() => addUser(userProfile.user._id)}>\r\n                          Add\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )\r\n            )\r\n          ) : (\r\n            <div>No profiles found</div>\r\n          )}\r\n        </div>\r\n        <button\r\n          className='round-button create-button'\r\n          onClick={() => handleOnClick(name, userList)}>\r\n          Create\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCurrentProfile,\r\n  getProfiles,\r\n  createCategory,\r\n})(CreateFriendsList);\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\friends-list\\FriendsListModel.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\layout\\FriendsModal.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\Dashboard.js",["244","245","246","247"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\PollSection.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\FriendsListSection.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\FriendsSection.js",["248","249","250","251"],"import React, { useEffect, useState, useRef, useReducer } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { getProfiles, getCurrentProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledBadge2 = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: '$ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid #44b700',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst FriendSection = ({\r\n  socket,\r\n  getProfiles,\r\n  getCurrentProfile,\r\n  profile: { profiles, loading, profile },\r\n}) => {\r\n  const [allProfile, setAllProfile] = useState([]);\r\n  const history = useHistory();\r\n  const [userList, setUserList] = useState([]);\r\n  const [, forceUpdate] = useState();\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('userStatus', (message) => {\r\n        setUserList(message.users);\r\n      });\r\n    }\r\n    setTimeout(forceUpdate, 2000);\r\n  }, [socket, setUserList]);\r\n\r\n  useEffect(() => {\r\n    getProfiles();\r\n    getCurrentProfile();\r\n    if (profiles !== [] && profile !== null) {\r\n      setAllProfile(\r\n        profiles.filter(\r\n          (userProfile) =>\r\n            profile.followers.includes(userProfile.user._id) ||\r\n            (profile.following.includes(userProfile.user._id) &&\r\n              userProfile.user._id !== profile.user._id)\r\n        )\r\n      );\r\n    }\r\n  }, [getProfiles, getCurrentProfile]);\r\n\r\n  return loading && profiles === [] && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className='profiles'>\r\n      <h1 className='profiles__heading'>Friends</h1>\r\n      {allProfile.length > 0 && profile !== null ? (\r\n        allProfile.map(\r\n          (userProfile) =>\r\n            userProfile.user !== null && (\r\n              <div\r\n                key={userProfile.user._id}\r\n                className='profile-name'\r\n                onClick={() => {\r\n                  history.push({\r\n                    pathname: '/profile',\r\n                    state: { data: userProfile },\r\n                  });\r\n                }}>\r\n                <Box display='flex'>\r\n                  <Box m={1}>\r\n                    {userList.includes(userProfile.user._id) ? (\r\n                      <StyledBadge2\r\n                        overlap='circle'\r\n                        anchorOrigin={{\r\n                          vertical: 'bottom',\r\n                          horizontal: 'right',\r\n                        }}\r\n                        variant='dot'>\r\n                        <Avatar\r\n                          alt={userProfile.user.name}\r\n                          src={userProfile.avatar}\r\n                        />\r\n                      </StyledBadge2>\r\n                    ) : (\r\n                      <Avatar\r\n                        alt={userProfile.user.name}\r\n                        src={userProfile.avatar}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n\r\n                <>{userProfile.user.name}</>\r\n              </div>\r\n            )\r\n        )\r\n      ) : (\r\n        <div>No profiles found</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles, getCurrentProfile })(\r\n  FriendSection\r\n);\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\dashboard\\FriendsListsSectionItem.js",["252","253"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Spinner from '../layout/Spinner';\r\nimport {\r\n  getCategory,\r\n  deleteCategory,\r\n  removeUserFromCategory,\r\n} from '../../actions/category';\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst FriendsListsSectionItem = ({\r\n  category_id,\r\n  profile: { profile, profiles, loading },\r\n  deleteCategory,\r\n  removeUserFromCategory,\r\n  dispatch,\r\n}) => {\r\n  const [categoryItem, setCategoryItem] = useState({});\r\n  const [friends, setFriends] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    //Get the category by Id\r\n    try {\r\n      const res = await axios.get(`/api/category/${category_id}`);\r\n\r\n      if (res.status === 200) {\r\n        setCategoryItem(res.data);\r\n        const filtered = profiles.filter((userProfile) =>\r\n          res.data.friends.includes(userProfile.user._id)\r\n        );\r\n\r\n        setFriends(filtered);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [category_id]);\r\n\r\n  const handleDelete = (friend) => {\r\n    removeUserFromCategory(category_id, friend.user._id);\r\n    if (friends.length > 1) {\r\n      setFriends(\r\n        friends.filter(\r\n          (currentFriends) => currentFriends.user._id !== friend.user._id\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return !loading && categoryItem !== null && friends.length > 0 ? (\r\n    <div className='category-container'>\r\n      <div className='category-info'>\r\n        <div className='category-name'>\r\n          <p className='category-name__name'>{categoryItem.category_name}</p>\r\n          <div>\r\n            <div className='category-name__friends-count'>\r\n              {friends.length}\r\n              {friends.length === 1 ? (\r\n                <span> friend</span>\r\n              ) : (\r\n                <span> friends</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='category-info__settings-symbol'>\r\n          <DeleteRoundedIcon\r\n            onClick={(e) => {\r\n              deleteCategory(category_id);\r\n            }}\r\n            className='setting-icon'\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='friends-list'>\r\n        {friends.map((friend, index) => {\r\n          return (\r\n            <div key={index} className='friends-list_list-item'>\r\n              <ClearIcon\r\n                onClick={() => handleDelete(friend)}\r\n                className='clear-icon'\r\n              />\r\n              <Avatar\r\n                alt={friend.user.name}\r\n                src={`https://res.cloudinary.com/daqdhcvyv/image/upload/v1615793443/${friend.avatar}`}\r\n                className='user-avtar'\r\n              />\r\n              <div className='friends-list_list-item__name'>\r\n                {friend.user.name}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Spinner />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCategory,\r\n  deleteCategory,\r\n  removeUserFromCategory,\r\n})(FriendsListsSectionItem);\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\reducers\\poll.js",["254"],"import {\r\n  GET_POLLS,\r\n  GET_POLL,\r\n  POLL_ERROR,\r\n  ADD_POLL,\r\n  GET_FOLLOWING_POLL,\r\n  UPDATE_LIKES,\r\n  UPDATE_POLL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  polls: [],\r\n  poll: null,\r\n  followingPolls: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ADD_POLL:\r\n    case GET_POLL:\r\n      return {\r\n        ...state,\r\n        poll: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_POLL:\r\n      return {\r\n        ...state,\r\n        polls: state.polls.map((poll) =>\r\n          poll._id === payload.id\r\n            ? {\r\n                ...poll,\r\n                question: payload.question,\r\n                friendsList: payload.friendsList,\r\n              }\r\n            : poll\r\n        ),\r\n        loading: false,\r\n      };\r\n    case GET_POLLS:\r\n      return {\r\n        ...state,\r\n        polls: payload,\r\n        loading: false,\r\n      };\r\n    case GET_FOLLOWING_POLL:\r\n      return {\r\n        ...state,\r\n        followingPolls: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        polls: state.polls.map((poll) =>\r\n          poll._id === payload.id\r\n            ? { ...poll, [`opinionImage${payload.image}Likes`]: payload.likes }\r\n            : poll\r\n        ),\r\n        loading: false,\r\n      };\r\n    case POLL_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\actions\\poll.js",["255"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POLLS,\r\n  GET_POLL,\r\n  GET_FOLLOWING_POLL,\r\n  POLL_ERROR,\r\n  ADD_POLL,\r\n  UPDATE_PROFILE,\r\n  UPDATE_LIKES,\r\n  DELETE_POLL,\r\n  UPDATE_POLL,\r\n} from './types';\r\n\r\n//Get Polls\r\n\r\nexport const getPolls = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('./api/polls');\r\n    dispatch({\r\n      type: GET_POLLS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POLL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Create Poll\r\n\r\nexport const createPoll = (question, image1, image2, friendsList) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const body = {\r\n    question: question,\r\n    opinionImage1: image1,\r\n    opinionImage2: image2,\r\n    friendsList: friendsList,\r\n  };\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/polls', body, config);\r\n    const { profile } = getState().profile;\r\n\r\n    dispatch({\r\n      type: ADD_POLL,\r\n      payload: res.data,\r\n    });\r\n    //Adding poll Id to profile's array\r\n    const pollItems = [...profile.polls, res.data._id];\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: { ...profile, polls: pollItems },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POLL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Update Poll\r\nexport const updatePoll = (id, question, friendsList) => async (dispatch) => {\r\n  const body = {\r\n    pollId: id,\r\n    question: question,\r\n    friendsList: friendsList,\r\n  };\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/polls/update', body, config);\r\n\r\n    console.log(res);\r\n    dispatch({\r\n      type: UPDATE_POLL,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POLL_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n//Delete poll\r\n\r\nexport const deletePoll = (pollId) => async (dispatch, getState) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    data: {\r\n      pollId: pollId,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.delete('/api/polls', config);\r\n    const { profile } = getState().profile;\r\n    dispatch({\r\n      type: DELETE_POLL,\r\n      payload: res.data,\r\n    });\r\n    const pollItems = profile.polls.filter((poll) => poll !== res.data._id);\r\n    console.log(pollItems);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: { ...profile, polls: pollItems },\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    dispatch({\r\n      type: POLL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET poll by id\r\nexport const getPollById = (pollId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/polls/${pollId}`);\r\n    dispatch({\r\n      type: GET_POLL,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POLL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Get foloowing peope's polls\r\n\r\nexport const getFollowingPoll = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/polls/following/polls');\r\n    dispatch({\r\n      type: GET_FOLLOWING_POLL,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POLL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Like post\r\nexport const addLike = (pollId, image) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axios.put(`/api/polls/like/${image}/${pollId}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { pollId, image, likes: res.data },\r\n    });\r\n    const { followingPolls } = getState().poll;\r\n    dispatch({\r\n      type: GET_FOLLOWING_POLL,\r\n      payload: followingPolls.map((poll) => {\r\n        if (poll._id === pollId) {\r\n          return { ...poll, [`opinionImage${image}Likes`]: res.data };\r\n        } else {\r\n          return poll;\r\n        }\r\n      }),\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POLL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// UnLike post\r\nexport const unLike = (pollId, image) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axios.put(`/api/polls/unlike/${image}/${pollId}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { pollId, image, likes: res.data },\r\n    });\r\n    const { followingPolls } = getState().poll;\r\n\r\n    dispatch({\r\n      type: GET_FOLLOWING_POLL,\r\n      payload: followingPolls.map((poll) => {\r\n        if (poll._id === pollId) {\r\n          return { ...poll, [`opinionImage${image}Likes`]: res.data };\r\n        } else {\r\n          return poll;\r\n        }\r\n      }),\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POLL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\PollsItem.js",[],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\CreatePollModel.js",["256","257"],"import React, { Fragment, useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { getPolls, createPoll } from '../../actions/poll';\r\nimport { getCategories } from '../../actions/category';\r\n\r\nconst CreatePollModel = ({\r\n  getCategories,\r\n  createPoll,\r\n  category: { categories, loading },\r\n  profile: { profile },\r\n  open,\r\n  onClose,\r\n  dispatch,\r\n}) => {\r\n  const [name, setName] = useState('');\r\n  //State for Dropdown value\r\n  const [items, setItems] = useState([]);\r\n  const [selected, setSelected] = useState('');\r\n\r\n  //Image value\r\n  const [fileInputState, setFileInputState] = useState('');\r\n  const [imageInputText, setImageInputText] = useState('Select two images');\r\n  const setImages = useRef([]);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n    if (categories) {\r\n      setItems(\r\n        categories.map(({ _id, category_name }) => ({\r\n          label: category_name,\r\n          value: _id,\r\n        }))\r\n      );\r\n    }\r\n  }, [open, profile]);\r\n\r\n  //Image input methods\r\n\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onloadend = () => {\r\n      setImages.current = [...setImages.current, reader.result];\r\n      if (setImages.current.length === 2) {\r\n        setImageInputText('You are all set to create poll.');\r\n      } else if (setImages.current.length === 1) {\r\n        setImageInputText('Upload one more image and you are all set.');\r\n      }\r\n      console.log(setImages.current);\r\n    };\r\n  };\r\n\r\n  //Create the new poll\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    createPoll(name, setImages.current[0], setImages.current[1], selected);\r\n    setName('');\r\n    setSelected('selected-list');\r\n    setImages.current = [];\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        aria-labelledby='transition-modal-title'\r\n        aria-describedby='transition-modal-description'\r\n        open={open}\r\n        onClose={onClose}\r\n        className='modal'\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={open}>\r\n          <div className='paper create-poll-model'>\r\n            <h1 className='create-poll-model__heading'>Create Poll</h1>\r\n            <form onSubmit={handleSubmit} className='create-poll-section'>\r\n              <div className='poll-form-section'>\r\n                <div className='poll-info-section'>\r\n                  <div className='poll-info-section__question'>\r\n                    <label>\r\n                      <span>Question:</span>\r\n                      <input\r\n                        type='text'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <span>Friend list:</span>\r\n                      <select\r\n                        className='poll-info-section__friends-list'\r\n                        disabled={loading}\r\n                        value={selected}\r\n                        onChange={(e) => setSelected(e.target.value)}>\r\n                        <option\r\n                          className='poll-info-section__friends-list'\r\n                          selected='selected'\r\n                          value='selected-list'>\r\n                          Select Your List\r\n                        </option>\r\n\r\n                        {items.map(({ label, value }) => (\r\n                          <option key={value} value={value}>\r\n                            {label}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className='image-sec'>\r\n                  <label class='custom-file-upload'>\r\n                    <input\r\n                      type='file'\r\n                      name='image'\r\n                      title='foo'\r\n                      onChange={handleFileInputChange}\r\n                      value={fileInputState}\r\n                      className='image-input'\r\n                    />\r\n                    <CloudUploadIcon className='cloud-icon' />\r\n                    {imageInputText}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <input\r\n                type='submit'\r\n                value='Create'\r\n                className='round-button create-poll-button'\r\n              />\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  category: state.category,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getPolls,\r\n  getCategories,\r\n  createPoll,\r\n})(CreatePollModel);\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\FriendsPolls.js",["258","259"],"C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\FriendsPollsItem.js",["260","261"],"import React, { useEffect, useState } from 'react';\r\nimport { Image } from 'cloudinary-react';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, unLike, getFollowingPoll } from '../../actions/poll';\r\nimport Spinner from '../layout/Spinner';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst FriendsPollsItem = ({ pollData, onClick, auth, addLike, unLike }) => {\r\n  return pollData ? (\r\n    <>\r\n      <div className='poll-card-container'>\r\n        <div className='user-info-poll'>\r\n          <Avatar\r\n            alt={pollData.name}\r\n            src={pollData.avatar}\r\n            className='user-avtar'\r\n          />\r\n          {pollData.name}\r\n        </div>\r\n        <div className='category-container poll-item poll-item-friends'>\r\n          <div className='poll-item__question'>{pollData.question}</div>\r\n          <div className='poll-item__friends-list'>\r\n            {pollData.opinionImage1Likes.length +\r\n              pollData.opinionImage2Likes.length}{' '}\r\n            {pollData.opinionImage1Likes.length +\r\n              pollData.opinionImage2Likes.length ===\r\n            1\r\n              ? ' answer'\r\n              : ' answers'}\r\n          </div>\r\n          <div className='poll-item__images'>\r\n            <div className='poll-item__images__image-div'>\r\n              <Image\r\n                cloudName='daqdhcvyv'\r\n                publicId={pollData.opinionImage1}\r\n                width='100'\r\n                height='100'\r\n                crop='mfit'\r\n                className='poll-image'\r\n              />\r\n              {pollData.opinionImage1Likes.some(\r\n                (like) => like.user === auth.user._id\r\n              ) ? (\r\n                <FavoriteIcon\r\n                  className='unlike-icon-friends'\r\n                  onClick={(e) => {\r\n                    unLike(pollData._id, 1);\r\n                    onClick();\r\n                  }}\r\n                />\r\n              ) : (\r\n                <FavoriteIcon\r\n                  className='like-icon-friends'\r\n                  onClick={(e) => {\r\n                    addLike(pollData._id, 1);\r\n                    onClick();\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className='poll-item__images__image-div'>\r\n              <Image\r\n                cloudName='daqdhcvyv'\r\n                publicId={pollData.opinionImage2}\r\n                width='100'\r\n                height='100'\r\n                crop='mfit'\r\n                className='poll-image'\r\n              />\r\n              {pollData.opinionImage2Likes.some(\r\n                (like) => like.user === auth.user._id\r\n              ) ? (\r\n                <FavoriteIcon\r\n                  className='unlike-icon-friends'\r\n                  onClick={(e) => {\r\n                    unLike(pollData._id, 2);\r\n                    onClick();\r\n                  }}\r\n                />\r\n              ) : (\r\n                <FavoriteIcon\r\n                  className='like-icon-friends'\r\n                  onClick={(e) => {\r\n                    addLike(pollData._id, 2);\r\n                    onClick();\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <Spinner />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, unLike, getFollowingPoll })(\r\n  FriendsPollsItem\r\n);\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\EditPollModel.js",["262"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { getPolls, updatePoll } from '../../actions/poll';\r\nimport { getCategories } from '../../actions/category';\r\n\r\nconst EditPollModel = ({\r\n  getCategories,\r\n  updatePoll,\r\n  category: { categories, loading },\r\n  profile: { profile },\r\n  question,\r\n  pollId,\r\n  list,\r\n  open,\r\n  onClose,\r\n}) => {\r\n  const [name, setName] = useState(question);\r\n  //State for Dropdown value\r\n  const [items, setItems] = useState([]);\r\n  const [selected, setSelected] = useState(list);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n    if (categories) {\r\n      setItems(\r\n        categories.map(({ _id, category_name }) => ({\r\n          label: category_name,\r\n          value: _id,\r\n        }))\r\n      );\r\n    }\r\n  }, [open, profile]);\r\n\r\n  //Image input methods\r\n\r\n  //Create the new poll\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    updatePoll(pollId, name, selected);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        aria-labelledby='transition-modal-title'\r\n        aria-describedby='transition-modal-description'\r\n        open={open}\r\n        onClose={onClose}\r\n        className='modal'\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={open}>\r\n          <div className='paper create-poll-model'>\r\n            <h1 className='create-poll-model__heading'>Edit Poll</h1>\r\n            <form onSubmit={handleSubmit} className='create-poll-section'>\r\n              <div className='poll-form-section'>\r\n                <div className='poll-info-section'>\r\n                  <div className='poll-info-section__question'>\r\n                    <label>\r\n                      <span>Question:</span>\r\n                      <input\r\n                        type='text'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <span>Friend list:</span>\r\n                      <select\r\n                        className='poll-info-section__friends-list'\r\n                        disabled={loading}\r\n                        value={selected}\r\n                        onChange={(e) => setSelected(e.target.value)}>\r\n                        {items.map(({ label, value }) => (\r\n                          <option key={value} value={value}>\r\n                            {label}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <input\r\n                type='submit'\r\n                value='Update'\r\n                className='round-button create-poll-button'\r\n              />\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  category: state.category,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getPolls,\r\n  getCategories,\r\n  updatePoll,\r\n})(EditPollModel);\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\PollDetails.js",["263","264"],"import React, { useState, useEffect } from 'react';\r\nimport { Image } from 'cloudinary-react';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FriendsSection from '../dashboard/FriendsSection';\r\nimport UserVoteItem from './UserVoteItem';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst PollDetails = (props) => {\r\n  const [image1LikesArray, setimage1LikesArray] = useState([]);\r\n  const [image2LikesArray, setimage2LikesArray] = useState([]);\r\n  const {\r\n    question,\r\n    opinionImage1,\r\n    opinionImage2,\r\n    opinionImage1Likes,\r\n    opinionImage2Likes,\r\n  } = props.location.state.data;\r\n\r\n  //Adding the image to Likes array to send it as props\r\n\r\n  useEffect(() => {\r\n    if (opinionImage1Likes.length) {\r\n      setimage1LikesArray(\r\n        opinionImage1Likes.map(({ user, date }) => {\r\n          return { user: user, date: date, image: opinionImage1 };\r\n        })\r\n      );\r\n    }\r\n  }, [opinionImage1Likes]);\r\n\r\n  useEffect(() => {\r\n    if (opinionImage2Likes.length) {\r\n      setimage2LikesArray(\r\n        opinionImage2Likes.map(({ user, date }) => {\r\n          return { user: user, date: date, image: opinionImage2 };\r\n        })\r\n      );\r\n    }\r\n  }, [opinionImage2Likes]);\r\n\r\n  return (\r\n    <div className='dashboard'>\r\n      <div className='friends-section'>\r\n        <FriendsSection />\r\n      </div>\r\n      <div className='friends-list-poll-section'>\r\n        <div className='details-section'>\r\n          <div className='poll-item__question details-section-margin'>\r\n            {question}\r\n          </div>\r\n          <div className='poll-item__friends-list details-section-margin'>\r\n            {opinionImage1Likes.length + opinionImage2Likes.length}\r\n            {opinionImage1Likes.length + opinionImage2Likes.length === 1\r\n              ? ' answer'\r\n              : ' answers'}\r\n          </div>\r\n          <div className='poll-item-details__images'>\r\n            <div className='poll-item-details__images__image-div'>\r\n              <Image\r\n                cloudName='daqdhcvyv'\r\n                publicId={opinionImage1}\r\n                width='120'\r\n                height='120'\r\n                crop='mfit'\r\n                className='poll-image'\r\n              />\r\n              <div className='like-icon-section'>\r\n                <FavoriteIcon className='like-icon' />\r\n                {opinionImage1Likes.length}\r\n              </div>\r\n            </div>\r\n            <div className='poll-item__images__image-div'>\r\n              <Image\r\n                cloudName='daqdhcvyv'\r\n                publicId={opinionImage2}\r\n                width='120'\r\n                height='120'\r\n                crop='mfit'\r\n                className='poll-image'\r\n              />\r\n              <div className='like-icon-section'>\r\n                <FavoriteIcon className='like-icon' />\r\n                {opinionImage2Likes.length}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='user-vote-item-container details-section'>\r\n          {[...image1LikesArray, ...image2LikesArray].length ? (\r\n            //Combine the likes arrat and sort them by datetime\r\n            [...image1LikesArray, ...image2LikesArray]\r\n              .sort((a, b) => {\r\n                return new Date(b.date) - new Date(a.date);\r\n              })\r\n              .map((like) => (\r\n                <>\r\n                  <Divider />\r\n                  <UserVoteItem likes={like} />\r\n                </>\r\n              ))\r\n          ) : (\r\n            <div className='not-found'>No votes found.</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollDetails;\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\polls\\UserVoteItem.js",["265"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserById } from '../../actions/auth';\r\nimport axios from 'axios';\r\nimport { Image } from 'cloudinary-react';\r\nimport moment from 'moment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst UserVoteItem = ({ likes, auth: { otherUser }, getUserById }) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [avatar, setavatar] = useState('');\r\n  useEffect(() => {\r\n    const getUser = async (userId) => {\r\n      const res = await axios.get(`/api/profile/user/${userId}`);\r\n      if (res.status === 200) {\r\n        setUserName(res.data.user.name);\r\n        setavatar(res.data.avatar);\r\n      }\r\n    };\r\n    getUser(likes.user);\r\n\r\n    console.log(userName);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className='user-vote-item-section'>\r\n        <div className='user-info'>\r\n          <div className='avatar'>\r\n            <Avatar\r\n              alt={userName}\r\n              src={`https://res.cloudinary.com/daqdhcvyv/image/upload/v1615793443/${avatar}`}\r\n            />\r\n          </div>\r\n          <div className='user-name'>\r\n            <div>{userName} voted</div>\r\n            <div className='time-info'>{moment(likes.date).fromNow()}</div>\r\n          </div>\r\n        </div>\r\n        <div className='voted-image'>\r\n          <Image\r\n            cloudName='daqdhcvyv'\r\n            publicId={likes.image}\r\n            width='60'\r\n            height='60'\r\n            crop='mfit'\r\n            className='poll-image'\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserById })(UserVoteItem);\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\UpdatePeofileModal.js",["266"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { updateAvatar } from '../../actions/profile';\r\n\r\nconst UpdateProfileModal = ({ open, handleClose, updateAvatar }) => {\r\n  //Image value\r\n  const [fileInputState, setFileInputState] = useState('Select your avatar');\r\n  const setImage = useRef([]);\r\n\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onloadend = () => {\r\n      setImage.current = reader.result;\r\n      console.log(setImage.current);\r\n      setFileInputState('Great! You are all ready to Go!!');\r\n    };\r\n  };\r\n\r\n  //Create the new poll\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    updateAvatar(setImage.current);\r\n    setImage.current = [];\r\n    setFileInputState('Select your avatar');\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby='transition-modal-title'\r\n        aria-describedby='transition-modal-description'\r\n        open={open}\r\n        onClose={handleClose}\r\n        className='modal'\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={open}>\r\n          <div className='paper image-update'>\r\n            <div className='image-sec'>\r\n              <label class='custom-file-upload update-profile-pic'>\r\n                <input\r\n                  type='file'\r\n                  name='image'\r\n                  title='foo'\r\n                  onChange={handleFileInputChange}\r\n                  className='image-input'\r\n                />\r\n                <CloudUploadIcon className='cloud-icon' />\r\n                {fileInputState}\r\n              </label>\r\n            </div>\r\n            <input\r\n              type='submit'\r\n              value='Update'\r\n              className='round-button create-poll-button'\r\n              onClick={handleSubmit}\r\n            />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { updateAvatar })(UpdateProfileModal);\r\n","C:\\Users\\Nikhar\\OneDrive\\Desktop\\hatchway_coop_project\\client\\src\\components\\profile\\PublicProfile.js",[],{"ruleId":"267","severity":1,"message":"268","line":1,"column":38,"nodeType":"269","messageId":"270","endLine":1,"endColumn":46},{"ruleId":"267","severity":1,"message":"271","line":24,"column":8,"nodeType":"269","messageId":"270","endLine":24,"endColumn":15},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"272","replacedBy":"276"},{"ruleId":"274","replacedBy":"277"},{"ruleId":"272","replacedBy":"278"},{"ruleId":"274","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":99,"column":11,"nodeType":"282","endLine":102,"endColumn":45},{"ruleId":"272","replacedBy":"283"},{"ruleId":"274","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":5,"column":1,"nodeType":"287","endLine":15,"endColumn":2},{"ruleId":"272","replacedBy":"288"},{"ruleId":"274","replacedBy":"289"},{"ruleId":"285","severity":1,"message":"286","line":20,"column":1,"nodeType":"287","endLine":55,"endColumn":2},{"ruleId":"267","severity":1,"message":"290","line":6,"column":3,"nodeType":"269","messageId":"270","endLine":6,"endColumn":21},{"ruleId":"285","severity":1,"message":"286","line":21,"column":1,"nodeType":"287","endLine":73,"endColumn":2},{"ruleId":"272","replacedBy":"291"},{"ruleId":"274","replacedBy":"292"},{"ruleId":"267","severity":1,"message":"293","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":25},{"ruleId":"267","severity":1,"message":"294","line":5,"column":8,"nodeType":"269","messageId":"270","endLine":5,"endColumn":19},{"ruleId":"295","severity":1,"message":"296","line":24,"column":6,"nodeType":"297","endLine":24,"endColumn":38,"suggestions":"298"},{"ruleId":"272","replacedBy":"299"},{"ruleId":"274","replacedBy":"300"},{"ruleId":"267","severity":1,"message":"301","line":2,"column":8,"nodeType":"269","messageId":"270","endLine":2,"endColumn":17},{"ruleId":"295","severity":1,"message":"302","line":15,"column":6,"nodeType":"297","endLine":15,"endColumn":14,"suggestions":"303"},{"ruleId":"267","severity":1,"message":"293","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"304","line":27,"column":6,"nodeType":"297","endLine":27,"endColumn":19,"suggestions":"305"},{"ruleId":"272","replacedBy":"306"},{"ruleId":"274","replacedBy":"307"},{"ruleId":"285","severity":1,"message":"286","line":20,"column":1,"nodeType":"287","endLine":61,"endColumn":2},{"ruleId":"272","replacedBy":"308"},{"ruleId":"274","replacedBy":"309"},{"ruleId":"295","severity":1,"message":"310","line":32,"column":6,"nodeType":"297","endLine":32,"endColumn":19,"suggestions":"311"},{"ruleId":"267","severity":1,"message":"312","line":1,"column":38,"nodeType":"269","messageId":"270","endLine":1,"endColumn":44},{"ruleId":"267","severity":1,"message":"268","line":1,"column":46,"nodeType":"269","messageId":"270","endLine":1,"endColumn":54},{"ruleId":"267","severity":1,"message":"313","line":3,"column":8,"nodeType":"269","messageId":"270","endLine":3,"endColumn":10},{"ruleId":"295","severity":1,"message":"314","line":20,"column":6,"nodeType":"297","endLine":20,"endColumn":8,"suggestions":"315"},{"ruleId":"267","severity":1,"message":"312","line":1,"column":38,"nodeType":"269","messageId":"270","endLine":1,"endColumn":44},{"ruleId":"267","severity":1,"message":"316","line":1,"column":46,"nodeType":"269","messageId":"270","endLine":1,"endColumn":56},{"ruleId":"267","severity":1,"message":"317","line":3,"column":10,"nodeType":"269","messageId":"270","endLine":3,"endColumn":18},{"ruleId":"295","severity":1,"message":"296","line":72,"column":6,"nodeType":"297","endLine":72,"endColumn":38,"suggestions":"318"},{"ruleId":"295","severity":1,"message":"319","line":24,"column":13,"nodeType":"320","endLine":40,"endColumn":4},{"ruleId":"295","severity":1,"message":"321","line":40,"column":6,"nodeType":"297","endLine":40,"endColumn":19,"suggestions":"322"},{"ruleId":"285","severity":1,"message":"286","line":19,"column":1,"nodeType":"287","endLine":74,"endColumn":2},{"ruleId":"267","severity":1,"message":"323","line":2,"column":10,"nodeType":"269","messageId":"270","endLine":2,"endColumn":18},{"ruleId":"267","severity":1,"message":"324","line":25,"column":26,"nodeType":"269","messageId":"270","endLine":25,"endColumn":43},{"ruleId":"295","severity":1,"message":"325","line":39,"column":6,"nodeType":"297","endLine":39,"endColumn":21,"suggestions":"326"},{"ruleId":"267","severity":1,"message":"316","line":1,"column":38,"nodeType":"269","messageId":"270","endLine":1,"endColumn":48},{"ruleId":"295","severity":1,"message":"327","line":19,"column":6,"nodeType":"297","endLine":19,"endColumn":13,"suggestions":"328"},{"ruleId":"267","severity":1,"message":"329","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":26},{"ruleId":"267","severity":1,"message":"268","line":1,"column":28,"nodeType":"269","messageId":"270","endLine":1,"endColumn":36},{"ruleId":"295","severity":1,"message":"325","line":35,"column":6,"nodeType":"297","endLine":35,"endColumn":21,"suggestions":"330"},{"ruleId":"295","severity":1,"message":"331","line":29,"column":6,"nodeType":"297","endLine":29,"endColumn":26,"suggestions":"332"},{"ruleId":"295","severity":1,"message":"333","line":39,"column":6,"nodeType":"297","endLine":39,"endColumn":26,"suggestions":"334"},{"ruleId":"295","severity":1,"message":"335","line":23,"column":6,"nodeType":"297","endLine":23,"endColumn":8,"suggestions":"336"},{"ruleId":"267","severity":1,"message":"329","line":1,"column":35,"nodeType":"269","messageId":"270","endLine":1,"endColumn":44},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","no-native-reassign",["337"],"no-negated-in-lhs",["338"],["337"],["338"],["337"],["338"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["337"],["338"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["337"],["338"],"'UPDATE_PROFILE_PIC' is defined but never used.",["337"],["338"],"'Fragment' is defined but never used.","'ProfileItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile' and 'profiles'. Either include them or remove the dependency array. If 'setAllProfile' needs the current value of 'profiles', you can also switch to useReducer instead of useState and read 'profiles' in the reducer.","ArrayExpression",["339"],["337"],["338"],"'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'allProfile'. Either include it or remove the dependency array.",["340"],"React Hook useEffect has missing dependencies: 'followType', 'getCurrentProfile', 'profile', and 'profiles'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["341"],["337"],["338"],["337"],["338"],"React Hook useEffect has missing dependencies: 'allProfile', 'getCurrentProfile', 'profile', and 'profiles'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["342"],"'useRef' is defined but never used.","'io' is defined but never used.","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["343"],"'useReducer' is defined but never used.","'Redirect' is defined but never used.",["344"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'profiles'. Either include it or remove the dependency array.",["345"],"'setAlert' is defined but never used.","'setFileInputState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categories' and 'getCategories'. Either include them or remove the dependency array. If 'getCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["346"],"React Hook useEffect has a missing dependency: 'getFollowingPoll'. Either include it or remove the dependency array. If 'getFollowingPoll' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["347"],"'useEffect' is defined but never used.",["348"],"React Hook useEffect has a missing dependency: 'opinionImage1'. Either include it or remove the dependency array.",["349"],"React Hook useEffect has a missing dependency: 'opinionImage2'. Either include it or remove the dependency array.",["350"],"React Hook useEffect has missing dependencies: 'likes.user' and 'userName'. Either include them or remove the dependency array.",["351"],"no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"352","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"365","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},"Update the dependencies array to be: [getProfiles, getCurrentProfile, profiles, profile]",{"range":"376","text":"377"},"Update the dependencies array to be: [allProfile, result]",{"range":"378","text":"379"},"Update the dependencies array to be: [followType, getCurrentProfile, getProfiles, profile, profiles]",{"range":"380","text":"381"},"Update the dependencies array to be: [allProfile, getCurrentProfile, getProfiles, profile, profiles]",{"range":"382","text":"383"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"384","text":"385"},{"range":"386","text":"377"},"Update the dependencies array to be: [category_id, profiles]",{"range":"387","text":"388"},"Update the dependencies array to be: [categories, getCategories, open, profile]",{"range":"389","text":"390"},"Update the dependencies array to be: [count, getFollowingPoll]",{"range":"391","text":"392"},{"range":"393","text":"390"},"Update the dependencies array to be: [opinionImage1, opinionImage1Likes]",{"range":"394","text":"395"},"Update the dependencies array to be: [opinionImage2, opinionImage2Likes]",{"range":"396","text":"397"},"Update the dependencies array to be: [likes.user, userName]",{"range":"398","text":"399"},[725,757],"[getProfiles, getCurrentProfile, profiles, profile]",[455,463],"[allProfile, result]",[782,795],"[followType, getCurrentProfile, getProfiles, profile, profiles]",[964,977],"[allProfile, getCurrentProfile, getProfiles, profile, profiles]",[644,646],"[getCurrentProfile]",[2032,2064],[1146,1159],"[category_id, profiles]",[1187,1202],"[categories, getCategories, open, profile]",[612,619],"[count, getFollowingPoll]",[951,966],[926,946],"[opinionImage1, opinionImage1Likes]",[1195,1215],"[opinionImage2, opinionImage2Likes]",[781,783],"[likes.user, userName]"]